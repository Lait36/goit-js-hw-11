{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Function to make HTTP request to Pixabay API\nexport const fetchImages = searchQuery => {\n  const options = new URLSearchParams({\n    key: '43292440-b0b2b94cbd69ec3f0dfdb5c21',\n    q: searchQuery,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 40,\n  });\n  const loader = document.querySelector('.loader');\n  const url = `https://pixabay.com/api/?${options}`;\nloader.classList.remove('is-hidden');\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      return response.json();\n    })\n    .then(res => {\n      const images = res.hits;\n      if (images.length === 0) {\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topCenter',\n        });\n      }\n      loader.classList.add('is-hidden');\n      return images;\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error);\n      return null;\n    })\n};\n","// Описаний у документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// render-functions.js\n\n// Function to render images in the gallery\nexport const renderImages = images => {\n  return images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n      <li class=\"gallery-item\">\n      <a class=\"gallery-link\" href=\"${largeImageURL}\">\n        <img\n          class=\"gallery-image\"\n          src=\"${webformatURL}\"\n          alt=\"${tags}\"\n        />\n      </a>\n      <ul class=\"list-jopa\">\n        <li class=\"jopa\">\n          <h3>Likes</h3>\n          <p>${likes}</p>\n        </li>\n        <li class=\"jopa\">\n          <h3>Views</h3>\n          <p>${views}</p>\n        </li>\n        <li class=\"jopa\">\n          <h3>Comments</h3>\n          <p>${comments}</p>\n        </li>\n        <li class=\"jopa\">\n          <h3>Downloads</h3>\n          <p>${downloads}</p>\n        </li>\n      </ul>\n    </li>\n    `\n    )\n    .join('');\n};\n","// Описаний у документації\nimport SimpleLightbox from 'simplelightbox';\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst currentTModal = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  disableRightClick: true,\n});\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages } from './js/render-functions.js';\n\nconst searchForm = document.querySelector('.form');\n\nsearchForm.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const searchInput = document.querySelector('input');\n  const searchQuery = searchInput.value.trim();\n\n  if (searchQuery === '') {\n    iziToast.warning({\n      title: '',\n      message: 'Please enter a search query',\n      position: 'topCenter',\n    });\n    return;\n  }\n\n  // Display loader\n\n  fetchImages(searchQuery)\n    .then(data => {\n      if (data) {\n        const container = document.querySelector('.gallery');\n        container.innerHTML = ''; // Очищення контейнера\n        container.innerHTML = renderImages(data); // Вставка нового HTML зображень\n        currentTModal.refresh();\n      }\n    });\n});\n"],"names":["fetchImages","searchQuery","options","loader","url","response","res","images","iziToast","error","renderImages","webformatURL","largeImageURL","tags","likes","views","comments","downloads","currentTModal","SimpleLightbox","searchForm","event","data","container"],"mappings":"6vBAMO,MAAMA,EAAcC,GAAe,CACxC,MAAMC,EAAU,IAAI,gBAAgB,CAClC,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACd,CAAG,EACKE,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAM,4BAA4BF,CAAO,GACjD,OAAAC,EAAO,UAAU,OAAO,WAAW,EAC1B,MAAMC,CAAG,EACb,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAE1C,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAO,CACX,MAAMC,EAASD,EAAI,KACnB,OAAIC,EAAO,SAAW,GACpBC,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,WACpB,CAAS,EAEHL,EAAO,UAAU,IAAI,WAAW,EACzBI,CACb,CAAK,EACA,MAAME,IACL,QAAQ,MAAM,yBAA0BA,CAAK,EACtC,KACR,CACL,EClCaC,EAAeH,GACnBA,EACJ,IACC,CAAC,CACC,aAAAI,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,sCAE0BL,CAAa;AAAA;AAAA;AAAA,iBAGlCD,CAAY;AAAA,iBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMNC,CAAK;AAAA;AAAA;AAAA;AAAA,eAILC,CAAK;AAAA;AAAA;AAAA;AAAA,eAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,eAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,KAKnB,EACA,KAAK,EAAE,EC1CNC,EAAgB,IAAIC,EAAe,aAAc,CACrD,aAAc,MACd,aAAc,IACd,kBAAmB,EACrB,CAAC,EAKKC,EAAa,SAAS,cAAc,OAAO,EAEjDA,EAAW,iBAAiB,SAAUC,GAAS,CAC7CA,EAAM,eAAc,EAGpB,MAAMpB,EADc,SAAS,cAAc,OAAO,EAClB,MAAM,KAAI,EAE1C,GAAIA,IAAgB,GAAI,CACtBO,EAAS,QAAQ,CACf,MAAO,GACP,QAAS,8BACT,SAAU,WAChB,CAAK,EACD,MACD,CAIDR,EAAYC,CAAW,EACpB,KAAKqB,GAAQ,CACZ,GAAIA,EAAM,CACR,MAAMC,EAAY,SAAS,cAAc,UAAU,EACnDA,EAAU,UAAY,GACtBA,EAAU,UAAYb,EAAaY,CAAI,EACvCJ,EAAc,QAAO,CACtB,CACP,CAAK,CACL,CAAC"}